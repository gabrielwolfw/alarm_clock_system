#include <stdio.h>
#include <stdint.h>
#include "system.h"
#include "timer.h"
#include "utils.h"

// Definiciones básicas de macros para PIO
#define IORD_ALTERA_AVALON_PIO_DATA(BASE)  (*(volatile unsigned int *)(BASE))
#define IOWR_ALTERA_AVALON_PIO_DATA(BASE, DATA)  (*(volatile unsigned int *)(BASE) = (DATA))

// Direcciones base para los PIO
#define BUTTON_PIO_BASE PIO_BUTTONS_0_BASE
#define DISPLAY_PIO_BASE PIO_7SEGMENTS_0_BASE
#define SWITCH_PIO_BASE PIO_SWITCHES_0_BASE


void handle_buttons(){
	//Controlar los botones y switches
}


// Tabla de conversión para números del 0 al 9 en displays de 7 segmentos
const unsigned char digit_to_segment[10] = {
    0x3F,  // 0b00111111
    0x06,  // 0b00000110
    0x5B,  // 0b01011011
    0x4F,  // 0b01001111
    0x66,  // 0b01100110
    0x6D,  // 0b01101101
    0x7D,  // 0b01111101
    0x07,  // 0b00000111
    0x7F,  // 0b01111111
    0x6F   // 0b01101111
};



void update_time_display() {
    // Variables para los valores de los displays
    uint32_t display_data = 0;

    // Convertir horas y minutos a valores adecuados para los displays (7 bits cada uno)
    uint8_t hours_tens = (hours / 10) & 0x7F;  // Limitar a 7 bits
    uint8_t hours_units = (hours % 10) & 0x7F; // Limitar a 7 bits
    uint8_t minutes_tens = (minutes / 10) & 0x7F; // Limitar a 7 bits
    uint8_t minutes_units = (minutes % 10) & 0x7F; // Limitar a 7 bits

    // Asignar los valores a los bits correspondientes de los displays (7 bits por display)
    display_data = (hours_tens << 21) | (hours_units << 14) |
                   (minutes_tens << 7) | (minutes_units);

    // Escribir los valores en el registro PIO
    IOWR_ALTERA_AVALON_PIO_DATA(PIO_7SEGMENTS_0_BASE, display_data);
}

int main() {
    // Inicialización
    init_timer();                // Inicializar temporizador
    load_alarm_configuration();  // Cargar configuración de la alarma
    load_current_time_configuration();  // Cargar configuración de la hora actual

    while (1) {
        handle_buttons();        // Manejar los botones
        update_time_display();   // Actualizar el display con la hora y la alarma
        // Aquí puedes agregar más lógica según sea necesario
    }

    return 0;
}

